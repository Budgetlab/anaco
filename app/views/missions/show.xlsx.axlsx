wb = xlsx_package.workbook
s = wb.styles
header_style = wb.styles.add_style(
  bg_color: 'ededed', fg_color: '161616',font_name: 'Calibri', sz: 13, b: true, alignment: { horizontal: :center, vertical: :center }, border: { style: :thick, color: "00" }
)
sub_header_style = wb.styles.add_style(
  bg_color: 'ff', fg_color: '161616',font_name: 'Calibri', sz: 13, b: true, alignment: { horizontal: :center, vertical: :center }, border: { style: :thick, color: "00" }
)
col_header_style = wb.styles.add_style(
                  bg_color: 'fff', fg_color: '161616',font_name: 'Calibri', sz: 13, alignment: {vertical: :center, wrap_text: true  }
                )
cell_style = wb.styles.add_style(
                  bg_color: 'fff', fg_color: '161616',font_name: 'Calibri', sz: 13, alignment: {vertical: :center }
                )
sheet_col = Array.new(40, 14)

wb.add_worksheet(name: "Cumul") do |sheet|
    sheet.add_row [nil, "HT2", nil, nil, nil, "T2", nil,nil,nil], style: header_style, height: 50
    sheet.merge_cells("B1:E1")
    sheet.merge_cells("F1:I1")

    sheet.add_row [nil, "Vision RPROG", nil, "Vision CBCM", nil, "Vision RPROG", nil, "Vision CBCM", nil], style: sub_header_style, height: 40
    sheet.merge_cells("B2:C2")
    sheet.merge_cells("D2:E2")
    sheet.merge_cells("F2:G2")
    sheet.merge_cells("H2:I2")

    sheet.add_row ["Programme", "AE (€)", "CP (€)", "AE (€)", "CP (€)","HCAS (€)", "CAS (€)", "HCAS (€)", "CAS (€)"], style: col_header_style, height: 30

    length_table = 4
    @programmes.each do |programme|
        schema = programme.last_schema_valid
        if schema
            length_table += 1
            sheet.add_row [programme.numero, schema&.gestion_schemas&.rprog_ht2&.first&.solde_total_ae, schema&.gestion_schemas&.rprog_ht2&.first&.solde_total_cp, schema&.gestion_schemas&.cbcm_ht2&.first&.solde_total_ae, schema&.gestion_schemas&.cbcm_ht2&.first&.solde_total_cp,
            schema&.gestion_schemas&.rprog_t2&.first&.solde_total_ae, schema&.gestion_schemas&.rprog_t2&.first&.solde_total_cp, schema&.gestion_schemas&.cbcm_t2&.first&.solde_total_ae, schema&.gestion_schemas&.cbcm_t2&.first&.solde_total_cp], style: cell_style
        end
    end
    sheet.add_row ["Total", @mission.total_ae_rprog_ht2_for_mission, @mission.total_cp_rprog_ht2_for_mission, @mission.total_ae_cbcm_ht2_for_mission, @mission.total_cp_cbcm_ht2_for_mission,
    @mission.total_ae_rprog_t2_for_mission, @mission.total_cp_rprog_t2_for_mission, @mission.total_ae_cbcm_t2_for_mission, @mission.total_cp_cbcm_t2_for_mission], style: cell_style

    sheet.add_style ["B4:I#{length_table}"], num_fmt: 1
    sheet.add_style ["A#{length_table}:I#{length_table}"], bg_color: "dae1f2"
    sheet.add_border ["A3:A#{length_table}", "C3:C#{length_table}","E3:E#{length_table}","G3:G#{length_table}","I3:I#{length_table}"], { edges: [:right], style: :thick }
    sheet.add_border ["A3:I3", "A#{length_table-1}:I#{length_table-1}","A#{length_table}:I#{length_table}"], { edges: [:bottom], style: :thick }
    sheet.column_widths(*sheet_col)

    sheet["B{length_table}:I#{length_table}"].each do |cell|
        if cell.value < 0
           cell.add_style bg_color: "FFE9E9"
        end
    end
end

 wb.add_worksheet(name: "HT2") do |sheet|
    sheet.add_row [nil,nil, "Situation à date", nil, nil, nil, nil,nil, nil, nil, nil, nil,
    "Hypothèses de couverture", nil, nil, nil, nil, nil, nil,nil, nil, nil, nil, nil, nil,nil, nil, nil,nil,nil,
    "Autres informations relatives à la fin de gestion", nil, nil,nil,nil,nil, "Commentaire" ], style: header_style, height: 50
    sheet.merge_cells("A1:B1")
    sheet.merge_cells("C1:L1")
    sheet.merge_cells("M1:AD1")
    sheet.merge_cells("AE1:AJ1")

    sheet.add_row [nil, nil, "Ressources certaines à date", nil, "Prévision de dépense", nil, "Solde prévisionnel", nil, "Niveau de la mise en réserve", nil, "Autre cas de réserve de crédits", nil,
    "Mobilisation de la mise en réserve", nil, "Mobilisation des autres cas de réserve", nil, "Fongibilité asymétrique", nil, "Virements/transferts entrants", nil, "Virements/transferts sortants", nil, "Décret d'avance", nil, "Ouverture/Annulation de crédits en LFG", nil, "Report arbitré ou consensuel", nil, "Solde final", nil,
    "Prévision de charges à payer", nil, "Autres reports de charge",nil, "Crédits à reporter", nil, nil], style: sub_header_style, height: 40
    sheet.merge_cells("A2:B2")
    sheet.merge_cells("C2:D2")
    sheet.merge_cells("E2:F2")
    sheet.merge_cells("G2:H2")
    sheet.merge_cells("I2:J2")
    sheet.merge_cells("K2:L2")
    sheet.merge_cells("M2:N2")
    sheet.merge_cells("O2:P2")
    sheet.merge_cells("Q2:R2")
    sheet.merge_cells("S2:T2")
    sheet.merge_cells("U2:V2")
    sheet.merge_cells("W2:X2")
    sheet.merge_cells("Y2:Z2")
    sheet.merge_cells("AA2:AB2")
    sheet.merge_cells("AC2:AD2")
    sheet.merge_cells("AE2:AF2")
    sheet.merge_cells("AG2:AH2")
    sheet.merge_cells("AI2:AJ2")

    sheet.add_row ["Programme", "Vision", "AE (€)", "CP (€)", "AE (€)", "CP (€)", "AE (€)", "CP (€)","AE (€)", "CP (€)","AE (€)", "CP (€)",
    "AE (€)", "CP (€)","AE (€)", "CP (€)","AE (€)", "CP (€)","AE (€)", "CP (€)","AE (€)", "CP (€)","AE (€)", "CP (€)","AE (€)", "CP (€)","AE (€)", "CP (€)","AE (€)", "CP (€)",
    "AE (€)", "CP (€)","AE (€)", "CP (€)","AE (€)", "CP (€)",nil], style: col_header_style, height: 30

    sheet.auto_filter = "A3:B3"
    length_table = 3

    @programmes&.each do |programme|
        @vision_rprog_ht2 = programme.last_schema_valid&.gestion_schemas&.find_by(vision: 'RPROG', profil: 'HT2')
        @vision_cbcm_ht2 = programme.last_schema_valid&.gestion_schemas&.find_by(vision: 'CBCM', profil: 'HT2')

        if @vision_rprog_ht2
            length_table += 2
            sheet.add_row [programme.numero, "RPROG", @vision_rprog_ht2.ressources_ae, @vision_rprog_ht2.ressources_cp, @vision_rprog_ht2.depenses_ae, @vision_rprog_ht2.depenses_cp, @vision_rprog_ht2.prevision_solde_budgetaire_ae , @vision_rprog_ht2.prevision_solde_budgetaire_cp, @vision_rprog_ht2.mer_ae, @vision_rprog_ht2.mer_cp, @vision_rprog_ht2.surgel_ae, @vision_rprog_ht2.surgel_cp,
            @vision_rprog_ht2.mobilisation_mer_ae, @vision_rprog_ht2.mobilisation_mer_cp, @vision_rprog_ht2.mobilisation_surgel_ae, @vision_rprog_ht2.mobilisation_surgel_cp, @vision_rprog_ht2.fongibilite_ae , @vision_rprog_ht2.fongibilite_cp, @vision_rprog_ht2.transferts_entrant_ae , @vision_rprog_ht2.transferts_entrant_cp, @vision_rprog_ht2.transferts_sortant_ae , @vision_rprog_ht2.transferts_sortant_ae, @vision_rprog_ht2.decret_ae , @vision_rprog_ht2.decret_cp, @vision_rprog_ht2.credits_lfg_ae, @vision_rprog_ht2.credits_lfg_cp, @vision_rprog_ht2.reports_ae , @vision_rprog_ht2.reports_cp , @vision_rprog_ht2.solde_total_ae, @vision_rprog_ht2.solde_total_cp,
            @vision_rprog_ht2.charges_a_payer_ae , @vision_rprog_ht2.charges_a_payer_cp, @vision_rprog_ht2.reports_autre_ae, @vision_rprog_ht2.reports_autre_cp, @vision_rprog_ht2.credits_reports_ae, @vision_rprog_ht2.credits_reports_cp, @vision_rprog_ht2.commentaire], style: cell_style
        end
        if @vision_cbcm_ht2
            sheet.add_row [programme.numero, "CBCM", @vision_cbcm_ht2.ressources_ae, @vision_cbcm_ht2.ressources_cp, @vision_cbcm_ht2.depenses_ae, @vision_cbcm_ht2.depenses_cp, @vision_cbcm_ht2.prevision_solde_budgetaire_ae , @vision_cbcm_ht2.prevision_solde_budgetaire_cp, @vision_cbcm_ht2.mer_ae, @vision_cbcm_ht2.mer_cp, @vision_cbcm_ht2.surgel_ae, @vision_cbcm_ht2.surgel_cp,
            @vision_cbcm_ht2.mobilisation_mer_ae, @vision_cbcm_ht2.mobilisation_mer_cp, @vision_cbcm_ht2.mobilisation_surgel_ae, @vision_cbcm_ht2.mobilisation_surgel_cp, @vision_cbcm_ht2.fongibilite_ae , @vision_cbcm_ht2.fongibilite_cp, @vision_cbcm_ht2.transferts_entrant_ae , @vision_cbcm_ht2.transferts_entrant_cp, @vision_cbcm_ht2.transferts_sortant_ae , @vision_cbcm_ht2.transferts_sortant_ae, @vision_cbcm_ht2.decret_ae , @vision_cbcm_ht2.decret_cp, @vision_cbcm_ht2.credits_lfg_ae, @vision_cbcm_ht2.credits_lfg_cp, @vision_cbcm_ht2.reports_ae , @vision_cbcm_ht2.reports_cp , @vision_cbcm_ht2.solde_total_ae, @vision_cbcm_ht2.solde_total_cp,
            @vision_cbcm_ht2.charges_a_payer_ae , @vision_cbcm_ht2.charges_a_payer_cp, @vision_cbcm_ht2.reports_autre_ae, @vision_cbcm_ht2.reports_autre_cp, @vision_cbcm_ht2.credits_reports_ae, @vision_cbcm_ht2.credits_reports_cp, @vision_cbcm_ht2.commentaire], style: cell_style
        end
    end

    sheet.add_border ["A3:A#{length_table}","B3:B#{length_table}","D3:D#{length_table}","F3:F#{length_table}","H3:H#{length_table}","J3:J#{length_table}","L3:L#{length_table}", "N3:N#{length_table}", "P3:P#{length_table}","R3:R#{length_table}", "T3:T#{length_table}", "V3:V#{length_table}", "X3:X#{length_table}", "Z3:Z#{length_table}", "AB3:AB#{length_table}", "AD3:AD#{length_table}","AF3:AF#{length_table}", "AH3:AH#{length_table}","AJ3:AJ#{length_table}","AK3:AK#{length_table}"], { edges: [:right], style: :thick }
    sheet.add_border "A3:AK3", { edges: [:bottom], style: :thick }
    sheet.add_border "A{length_table}:AK#{length_table}", { edges: [:bottom], style: :thick }
    sheet.column_widths(*sheet_col)

    if length_table > 3
        sheet.add_style ["C4:AJ#{length_table}"], num_fmt: 1
        sheet["G4:H#{length_table}"].each do |cell|
                        if cell.value < 0
                          cell.add_style bg_color: "FFE9E9"
                        else
                          cell.add_style bg_color: "dae1f2"
                        end
        end
        sheet["AC4:AD#{length_table}"].each do |cell|
                            if cell.value < 0
                              cell.add_style bg_color: "FFE9E9"
                            else
                              cell.add_style bg_color: "dae1f2"
                            end
        end
    end

 end

wb.add_worksheet(name: "T2") do |sheet|
    sheet.add_row [nil,nil, "Situation à date", nil, nil, nil, nil,nil, nil, nil, nil, nil,
    "Hypothèses de couverture", nil, nil, nil, nil, nil, nil,nil, nil, nil, nil, nil, nil,nil, nil, nil,nil,nil, "Commentaire" ], style: header_style, height: 50
    sheet.merge_cells("A1:B1")
    sheet.merge_cells("C1:L1")
    sheet.merge_cells("M1:AD1")

    sheet.add_row [nil, nil, "Ressources certaines à date", nil, "Prévision de dépense", nil, "Solde prévisionnel", nil, "Niveau de la mise en réserve", nil, "Autre cas de réserve de crédits", nil,
    "Mobilisation de la mise en réserve", nil, "Mobilisation des autres cas de réserve", nil, "Fongibilité asymétrique", nil, "Virements/transferts entrants", nil, "Virements/transferts sortants", nil, "Décret d'avance", nil, "Ouverture/Annulation de crédits en LFG", nil, "Report arbitré ou consensuel", nil, "Solde final", nil, nil], style: sub_header_style, height: 40
    sheet.merge_cells("A2:B2")
    sheet.merge_cells("C2:D2")
    sheet.merge_cells("E2:F2")
    sheet.merge_cells("G2:H2")
    sheet.merge_cells("I2:J2")
    sheet.merge_cells("K2:L2")
    sheet.merge_cells("M2:N2")
    sheet.merge_cells("O2:P2")
    sheet.merge_cells("Q2:R2")
    sheet.merge_cells("S2:T2")
    sheet.merge_cells("U2:V2")
    sheet.merge_cells("W2:X2")
    sheet.merge_cells("Y2:Z2")
    sheet.merge_cells("AA2:AB2")
    sheet.merge_cells("AC2:AD2")

    sheet.add_row ["Programme", "Vision", "HCAS (€)", "CAS (€)", "HCAS (€)","CAS (€)", "HCAS (€)","CAS (€)", "HCAS (€)","CAS (€)", "HCAS (€)",
    "CAS (€)", "HCAS (€)", "CAS (€)", "HCAS (€)","CAS (€)", "HCAS (€)", "CAS (€)", "HCAS (€)","CAS (€)", "HCAS (€)", "CAS (€)", "HCAS (€)","CAS (€)", "HCAS (€)", "CAS (€)", "HCAS (€)","CAS (€)", "HCAS (€)", "CAS (€)",nil], style: col_header_style, height: 30

    sheet.auto_filter = "A3:B3"
    length_table = 3

    @programmes&.each do |programme|
        @vision_rprog_t2 = programme.last_schema_valid&.gestion_schemas&.find_by(vision: 'RPROG', profil: 'T2')
        @vision_cbcm_t2 = programme.last_schema_valid&.gestion_schemas&.find_by(vision: 'CBCM', profil: 'T2')

        if @vision_rprog_t2
            length_table += 2
            sheet.add_row [programme.numero, "RPROG", @vision_rprog_t2.ressources_ae, @vision_rprog_t2.ressources_cp, @vision_rprog_t2.depenses_ae, @vision_rprog_t2.depenses_cp, @vision_rprog_t2.prevision_solde_budgetaire_ae , @vision_rprog_t2.prevision_solde_budgetaire_cp, @vision_rprog_t2.mer_ae, @vision_rprog_t2.mer_cp, @vision_rprog_t2.surgel_ae, @vision_rprog_t2.surgel_cp,
            @vision_rprog_t2.mobilisation_mer_ae, @vision_rprog_t2.mobilisation_mer_cp, @vision_rprog_t2.mobilisation_surgel_ae, @vision_rprog_t2.mobilisation_surgel_cp, @vision_rprog_t2.fongibilite_ae , @vision_rprog_t2.fongibilite_cp, @vision_rprog_t2.transferts_entrant_ae , @vision_rprog_t2.transferts_entrant_cp, @vision_rprog_t2.transferts_sortant_ae , @vision_rprog_t2.transferts_sortant_ae, @vision_rprog_t2.decret_ae , @vision_rprog_t2.decret_cp, @vision_rprog_t2.credits_lfg_ae, @vision_rprog_t2.credits_lfg_cp, @vision_rprog_t2.reports_ae , @vision_rprog_t2.reports_cp , @vision_rprog_t2.solde_total_ae, @vision_rprog_t2.solde_total_cp, @vision_rprog_t2.commentaire], style: cell_style
        end
        if @vision_cbcm_t2
            sheet.add_row [programme.numero, "CBCM", @vision_cbcm_t2.ressources_ae, @vision_cbcm_t2.ressources_cp, @vision_cbcm_t2.depenses_ae, @vision_cbcm_t2.depenses_cp, @vision_cbcm_t2.prevision_solde_budgetaire_ae , @vision_cbcm_t2.prevision_solde_budgetaire_cp, @vision_cbcm_t2.mer_ae, @vision_cbcm_t2.mer_cp, @vision_cbcm_t2.surgel_ae, @vision_cbcm_t2.surgel_cp,
            @vision_cbcm_t2.mobilisation_mer_ae, @vision_cbcm_t2.mobilisation_mer_cp, @vision_cbcm_t2.mobilisation_surgel_ae, @vision_cbcm_t2.mobilisation_surgel_cp, @vision_cbcm_t2.fongibilite_ae , @vision_cbcm_t2.fongibilite_cp, @vision_cbcm_t2.transferts_entrant_ae , @vision_cbcm_t2.transferts_entrant_cp, @vision_cbcm_t2.transferts_sortant_ae , @vision_cbcm_t2.transferts_sortant_ae, @vision_cbcm_t2.decret_ae , @vision_cbcm_t2.decret_cp, @vision_cbcm_t2.credits_lfg_ae, @vision_cbcm_t2.credits_lfg_cp, @vision_cbcm_t2.reports_ae , @vision_cbcm_t2.reports_cp , @vision_cbcm_t2.solde_total_ae, @vision_cbcm_t2.solde_total_cp, @vision_cbcm_t2.commentaire], style: cell_style
        end
    end

    sheet.add_border ["A3:A#{length_table}","B3:B#{length_table}","D3:D#{length_table}","F3:F#{length_table}","H3:H#{length_table}","J3:J#{length_table}","L3:L#{length_table}", "N3:N#{length_table}", "P3:P#{length_table}","R3:R#{length_table}", "T3:T#{length_table}", "V3:V#{length_table}", "X3:X#{length_table}", "Z3:Z#{length_table}", "AB3:AB#{length_table}", "AD3:AD#{length_table}", "AE3:AE#{length_table}"], { edges: [:right], style: :thick }
    sheet.add_border "A3:AE3", { edges: [:bottom], style: :thick }
    sheet.add_border "A{length_table}:AE#{length_table}", { edges: [:bottom], style: :thick }

    sheet.column_widths(*sheet_col)
    if length_table > 3
        sheet.add_style ["G4:H#{length_table}","AC4:AD#{length_table}"], bg_color: 'dae1f2'
        sheet.add_style ["C4:AD#{length_table}"], num_fmt: 1
        sheet["G4:H#{length_table}"].each do |cell|
                            if cell.value < 0
                              cell.add_style bg_color: "FFE9E9"
                            else
                              cell.add_style bg_color: "dae1f2"
                            end
            end
        sheet["AC4:AD#{length_table}"].each do |cell|
                            if cell.value < 0
                               cell.add_style bg_color: "FFE9E9"
                            else
                               cell.add_style bg_color: "dae1f2"
                            end
        end
    end

 end
